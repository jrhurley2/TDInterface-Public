name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:
env:
  IsRelease: false
  
jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Increment version number
      if: github.ref == 'refs/heads/master'
      id: version
      run: |
        $pathToCsproj = "TdInterface/TdInterface.csproj"
        $xml = [xml](Get-Content $pathToCsproj)
        $version = $xml.Project.PropertyGroup.AssemblyVersion
        $major = [int]($version.Split(".")[0])
        $minor = [int]($version.Split(".")[1])
        $patch = [int]($version.Split(".")[2])
        $newVersion = "{0}.{1}.{2}" -f $major, $minor, ($patch + 1)
        $xml.Project.PropertyGroup.AssemblyVersion = $newVersion
        $xml.Save($pathToCsproj)
        Write-Output "::set-output name=version::$newVersion"

    - name: Commit changes
      if: github.ref == 'refs/heads/master'
      run: |
        git config --global user.name "Jrhurley2"
        git config --global user.email "jrhurley2@outlook.com"
        git add TdInterface/TdInterface.csproj
        git commit -m "Increment version number"
        git push

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal
    
    - name: Publish
      run: dotnet publish

    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        filename: "TDInterface.zip"
        directory: 'D:\a\TDInterface-Public\TDInterface-Public\TdInterface\bin\Debug\net7.0-windows\publish\'
        
    # - name: Upload Release
    #   if: github.ref == 'refs/heads/master' && env.IsRelease
    #   uses: ncipollo/release-action@v1
    #   with:
    #     artifacts: 'D:\a\TDInterface-Public\TDInterface-Public\TdInterface\bin\Debug\net7.0-windows\publish\TDInterface.zip'
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     tag: "${{ steps.version.outputs.version}}"
    #     makeLatest: false

