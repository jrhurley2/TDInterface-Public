using Microsoft.VisualStudio.TestTools.UnitTesting;
using TdInterface.Model;
using System;
using System.Collections.Generic;
using System.Text;
using Newtonsoft.Json;

namespace TdInterface.Model.Tests
{
    [TestClass()]
    public class OrderEntryRequestMessageTests
    {
        [TestMethod()]
        public void ParseXmlTest()
        {
            var xmlString = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><OrderEntryRequestMessage xmlns=\"urn:xmlns:beb.ameritrade.com\"><OrderGroupID><Firm/><Branch>863</Branch><ClientKey>xx12</ClientKey><AccountKey>xx12</AccountKey><Segment>tos</Segment><SubAccountType>Short</SubAccountType><CDDomainID/></OrderGroupID><ActivityTimestamp>2022-05-18T10:24:04.074-05:00</ActivityTimestamp><Order xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"EquityOrderT\"><OrderKey>5587678491</OrderKey><Security><CUSIP>037833100</CUSIP><Symbol>AAPL</Symbol><SecurityType>Common Stock</SecurityType></Security><OrderPricing xsi:type=\"MarketT\"/><OrderType>Market</OrderType><OrderDuration>Day</OrderDuration><OrderEnteredDateTime>2022-05-18T10:24:04.074-05:00</OrderEnteredDateTime><OrderInstructions>Short</OrderInstructions><OriginalQuantity>100</OriginalQuantity><AmountIndicator>Shares</AmountIndicator><Discretionary>false</Discretionary><OrderSource>Web</OrderSource><Solicited>false</Solicited><MarketCode>Normal</MarketCode><DeliveryInstructions>Ship In Customer Name</DeliveryInstructions><Capacity>Agency</Capacity><NetShortQty>0</NetShortQty><Taxlot>null or blank</Taxlot><EnteringDevice>other</EnteringDevice></Order><ToSecurity><CUSIP>037833100</CUSIP><Symbol>AAPL</Symbol><SecurityType>Common Stock</SecurityType></ToSecurity></OrderEntryRequestMessage>";

            var orderEntryRequestMessage = OrderEntryRequestMessage.ParseXml(xmlString); ;

            Assert.AreEqual(100, orderEntryRequestMessage.Order.OriginalQuantity);
            //Assert.AreEqual(143.8401m, orderEntryRequestMessage);
        }

        [TestMethod]
        public void MyTestMethod()
        {
            var jsonString = "{\"data\":[{\"service\":\"ACCT_ACTIVITY\", \"timestamp\":1654265318959,\"command\":\"SUBS\",\"content\":[{\"seq\":1,\"key\":\"b122e07d9ef146b7861b4eb78aada2b00aba3d60eaa29df56efdb497063ffac13ad54b49b5cec606207f8f369666df772\",\"1\":\"863614551\",\"2\":\"OrderEntryRequest\",\"3\":\"<?xml version=\"1.0\" encoding=\"UTF - 8\"?><OrderEntryRequestMessage xmlns=\"urn: xmlns: beb.ameritrade.com\"><OrderGroupID><Firm/><Branch>863</Branch><ClientKey>863614551</ClientKey><AccountKey>863614551</AccountKey><Segment>tos</Segment><SubAccountType>Margin</SubAccountType><CDDomainID/></OrderGroupID><ActivityTimestamp>2022-06-03T09:08:38.749-05:00</ActivityTimestamp><Order xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"EquityOrderT\"><OrderKey>5621076050</OrderKey><Security><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></Security><OrderPricing xsi:type=\"MarketT\"/><OrderType>Market</OrderType><OrderDuration>Day</OrderDuration><OrderEnteredDateTime>2022-06-03T09:08:38.749-05:00</OrderEnteredDateTime><OrderInstructions>Buy</OrderInstructions><OriginalQuantity>156</OriginalQuantity><AmountIndicator>Shares</AmountIndicator><Discretionary>false</Discretionary><OrderSource>Web</OrderSource><Solicited>false</Solicited><MarketCode>Normal</MarketCode><DeliveryInstructions>Ship In Customer Name</DeliveryInstructions><Capacity>Agency</Capacity><NetShortQty>0</NetShortQty><Taxlot>null or blank</Taxlot><EnteringDevice>other</EnteringDevice></Order><ToSecurity><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></ToSecurity></OrderEntryRequestMessage>\"},{\"seq\":2,\"key\":\"b122e07d9ef146b7861b4eb78aada2b00aba3d60eaa29df56efdb497063ffac13ad54b49b5cec606207f8f369666df772\",\"1\":\"863614551\",\"2\":\"OrderEntryRequest\",\"3\":\"<?xml version=\"1.0\" encoding=\"UTF-8\"?><OrderEntryRequestMessage xmlns=\"urn:xmlns:beb.ameritrade.com\"><OrderGroupID><Firm/><Branch>863</Branch><ClientKey>863614551</ClientKey><AccountKey>863614551</AccountKey><Segment>tos</Segment><SubAccountType>Margin</SubAccountType><CDDomainID/></OrderGroupID><ActivityTimestamp>2022-06-03T09:08:38.749-05:00</ActivityTimestamp><Order xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"EquityOrderT\"><OrderKey>5621076053</OrderKey><Security><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></Security><OrderPricing xsi:type=\"LimitT\"><Limit>109.27</Limit></OrderPricing><OrderType>Limit</OrderType><OrderDuration>Day</OrderDuration><OrderEnteredDateTime>2022-06-03T09:08:38.749-05:00</OrderEnteredDateTime><OrderInstructions>Sell</OrderInstructions><OriginalQuantity>39</OriginalQuantity><AmountIndicator>Shares</AmountIndicator><Discretionary>false</Discretionary><OrderSource>Web</OrderSource><Solicited>false</Solicited><MarketCode>Normal</MarketCode><DeliveryInstructions>Ship In Customer Name</DeliveryInstructions><Capacity>Agency</Capacity><NetShortQty>0</NetShortQty><Taxlot>null or blank</Taxlot><EnteringDevice>other</EnteringDevice></Order><ToSecurity><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></ToSecurity></OrderEntryRequestMessage>\"},{\"seq\":3,\"key\":\"b122e07d9ef146b7861b4eb78aada2b00aba3d60eaa29df56efdb497063ffac13ad54b49b5cec606207f8f369666df772\",\"1\":\"863614551\",\"2\":\"OrderEntryRequest\",\"3\":\"<?xml version=\"1.0\" encoding=\"UTF-8\"?><OrderEntryRequestMessage xmlns=\"urn:xmlns:beb.ameritrade.com\"><OrderGroupID><Firm/><Branch>863</Branch><ClientKey>863614551</ClientKey><AccountKey>863614551</AccountKey><Segment>tos</Segment><SubAccountType>Margin</SubAccountType><CDDomainID/></OrderGroupID><ActivityTimestamp>2022-06-03T09:08:38.749-05:00</ActivityTimestamp><Order xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"EquityOrderT\"><OrderKey>5621076052</OrderKey><Security><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></Security><OrderPricing xsi:type=\"StopT\"><Stop>108.95</Stop></OrderPricing><OrderType>Stop</OrderType><OrderDuration>Day</OrderDuration><OrderEnteredDateTime>2022-06-03T09:08:38.749-05:00</OrderEnteredDateTime><OrderInstructions>Sell</OrderInstructions><OriginalQuantity>156</OriginalQuantity><AmountIndicator>Shares</AmountIndicator><Discretionary>false</Discretionary><OrderSource>Web</OrderSource><Solicited>false</Solicited><MarketCode>Normal</MarketCode><DeliveryInstructions>Ship In Customer Name</DeliveryInstructions><Capacity>Agency</Capacity><NetShortQty>0</NetShortQty><Taxlot>null or blank</Taxlot><EnteringDevice>other</EnteringDevice></Order><ToSecurity><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></ToSecurity></OrderEntryRequestMessage>\"},{\"seq\":4,\"key\":\"b122e07d9ef146b7861b4eb78aada2b00aba3d60eaa29df56efdb497063ffac13ad54b49b5cec606207f8f369666df772\",\"1\":\"863614551\",\"2\":\"OrderPartialFill\",\"3\":\"<?xml version=\"1.0\" encoding=\"UTF-8\"?><OrderPartialFillMessage xmlns=\"urn:xmlns:beb.ameritrade.com\"><OrderGroupID><Firm/><Branch>863</Branch><ClientKey>863614551</ClientKey><AccountKey>863614551</AccountKey><Segment>tos</Segment><SubAccountType>Margin</SubAccountType><CDDomainID/></OrderGroupID><ActivityTimestamp>2022-06-03T09:08:38.852-05:00</ActivityTimestamp><Order xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"EquityOrderT\"><OrderKey>5621076050</OrderKey><Security><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></Security><OrderPricing xsi:type=\"MarketT\"/><OrderType>Market</OrderType><OrderDuration>Day</OrderDuration><OrderEnteredDateTime>2022-06-03T09:08:38.749-05:00</OrderEnteredDateTime><OrderInstructions>Buy</OrderInstructions><OriginalQuantity>156</OriginalQuantity><AmountIndicator>Shares</AmountIndicator><Discretionary>false</Discretionary><OrderSource>Web</OrderSource><Solicited>false</Solicited><MarketCode>Normal</MarketCode><DeliveryInstructions>Ship In Customer Name</DeliveryInstructions><Capacity>Agency</Capacity><Charges><Charge><Type>Commission Override</Type><Amount>0</Amount></Charge><Charge><Type>TAF Fee</Type><Amount>0</Amount></Charge></Charges><NetShortQty>0</NetShortQty><Taxlot>null or blank</Taxlot><EnteringDevice>other</EnteringDevice></Order><OrderCompletionCode>Normal Completion</OrderCompletionCode><ContraInformation><Contra><AccountKey>863614551</AccountKey><SubAccountType>Margin</SubAccountType><Broker>NKNIGHT2 FIX</Broker><Quantity>100</Quantity><BadgeNumber/><ReportTime>2022-06-03T09:08:38.852-05:00</ReportTime></Contra></ContraInformation><SettlementInformation><Instructions>Normal</Instructions><Date>2022-06-07</Date></SettlementInformation><ExecutionInformation><Type>Bought</Type><Timestamp>2022-06-03T09:08:38.852-05:00</Timestamp><Quantity>100</Quantity><ExecutionPrice>109.1096</ExecutionPrice><AveragePriceIndicator>false</AveragePriceIndicator><LeavesQuantity>56</LeavesQuantity><ID>8840960393</ID><Exchange>3</Exchange><BrokerId>NITE</BrokerId></ExecutionInformation><MarkupAmount>0</MarkupAmount><MarkdownAmount>0</MarkdownAmount><TradeCreditAmount>0</TradeCreditAmount><RemainingQuantity>56</RemainingQuantity></OrderPartialFillMessage>\"},{\"seq\":5,\"key\":\"b122e07d9ef146b7861b4eb78aada2b00aba3d60eaa29df56efdb497063ffac13ad54b49b5cec606207f8f369666df772\",\"1\":\"863614551\",\"2\":\"OrderFill\",\"3\":\"<?xml version=\"1.0\" encoding=\"UTF-8\"?><OrderFillMessage xmlns=\"urn:xmlns:beb.ameritrade.com\"><OrderGroupID><Firm/><Branch>863</Branch><ClientKey>863614551</ClientKey><AccountKey>863614551</AccountKey><Segment>tos</Segment><SubAccountType>Margin</SubAccountType><CDDomainID/></OrderGroupID><ActivityTimestamp>2022-06-03T09:08:38.852-05:00</ActivityTimestamp><Order xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:type=\"EquityOrderT\"><OrderKey>5621076050</OrderKey><Security><CUSIP>007903107</CUSIP><Symbol>AMD</Symbol><SecurityType>Common Stock</SecurityType></Security><OrderPricing xsi:type=\"MarketT\"/><OrderType>Market</OrderType><OrderDuration>Day</OrderDuration><OrderEnteredDateTime>2022-06-03T09:08:38.749-05:00</OrderEnteredDateTime><OrderInstructions>Buy</OrderInstructions><OriginalQuantity>156</OriginalQuantity><AmountIndicator>Shares</AmountIndicator><Discretionary>false</Discretionary><OrderSource>Web</OrderSource><Solicited>false</Solicited><MarketCode>Normal</MarketCode><DeliveryInstructions>Ship In Customer Name</DeliveryInstructions><Capacity>Agency</Capacity><Charges><Charge><Type>Commission Override</Type><Amount>0</Amount></Charge><Charge><Type>TAF Fee</Type><Amount>0</Amount></Charge></Charges><NetShortQty>0</NetShortQty><Taxlot>null or blank</Taxlot><EnteringDevice>other</EnteringDevice></Order><OrderCompletionCode>Normal Completion</OrderCompletionCode><ContraInformation><Contra><AccountKey>863614551</AccountKey><SubAccountType>Margin</SubAccountType><Broker>NKNIGHT2 FIX</Broker><Quantity>56</Quantity><BadgeNumber/><ReportTime>2022-06-03T09:08:38.852-05:00</ReportTime></Contra></ContraInformation><SettlementInformation><Instructions>Normal</Instructions><Date>2022-06-07</Date></SettlementInformation><ExecutionInformation><Type>Bought</Type><Timestamp>2022-06-03T09:08:38.852-05:00</Timestamp><Quantity>56</Quantity><ExecutionPrice>109.1096</ExecutionPrice><AveragePriceIndicator>false</AveragePriceIndicator><LeavesQuantity>0</LeavesQuantity><ID>8840960394</ID><Exchange>3</Exchange><BrokerId>NITE</BrokerId></ExecutionInformation><MarkupAmount>0</MarkupAmount><MarkdownAmount>0</MarkdownAmount><TradeCreditAmount>0</TradeCreditAmount></OrderFillMessage>\"}]}]}";

            var v = JsonConvert.DeserializeObject<Dictionary<string, object>>(jsonString);
            var data = JsonConvert.DeserializeObject<List<SocketData>>(v["data"].ToString());
            foreach (var socketData in data)
            {
                var command = socketData.command;
                var service = socketData.service;
                if (service == "ACCT_ACTIVITY")
                {
                    foreach (var content in socketData.content)
                    {
                        if (content["2"] == "OrderEntryRequest")
                        {
                            var orderEntryRequestMessage = OrderEntryRequestMessage.ParseXml(content["3"]);
                        }

                    }
                }
            }
        }
    }
}